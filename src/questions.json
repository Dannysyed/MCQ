[
    {
        "text": "What is a widget's build method primarily used for?",
        "options": [
            "Describing how the widget appears in terms of UI",
            "Downloading the build.gradle file to allow for Android integration",
            "Creating a State variable which will change based on user input",
            "Creating a Flutter application"
        ],
        "answer": "Describing how the widget appears in terms of UI"
    },
    {
        "text": "What is one use of the : operator in Dart?",
        "options": [
            "Creating a null safe typing",
            "Building a widget in the UI",
            "Invoking a parent constructor",
            "A special type of for loop"
        ],
        "answer": "Invoking a parent constructor"
    },
    {
        "text": "Suppose we want our Student class to inherit from Person. How would we do this in Dart?",
        "options": [
            "class Student extends Person",
            "class Student : Person",
            "class Student -> Person",
            "class Student inherits Person"
        ],
        "answer": "class Student extends Person"
    },
    {
        "text": "Functions are not 'first class' in Dart, so they cannot be assigned to a variable directly.",
        "options": [
            "True",
            "False"
        ],
        "answer": "False"
    },
    {
        "text": "Which widget is often used to create a small circular button at the bottom of the screen in Android?",
        "options": [
            "ElevatedButton",
            "CupertinoButton",
            "FloatingActionButton",
            "Button"
        ],
        "answer": "FloatingActionButton"
    },
    {
        "text": "Suppose you have a Row widget. What would you generally put in its children argument?",
        "options": [
            "Other widgets you wish to position together in a row",
            "Row does not have a children argument",
            "Code to center the widgets in the middle",
            "A controller to handle state changes for the row"
        ],
        "answer": "Other widgets you wish to position together in a row"
    },
    {
        "text": "A CupertinoButton is designed to look like an iOS button.",
        "options": [
            "True",
            "False"
        ],
        "answer": "True"
    },
    {
        "text": "What is a Hero widget commonly used for?",
        "options": [
            "Creating a centered layout for your application",
            "Displaying an iOS style button",
            "Animating the transition between two screens",
            "Rotating or scaling widgets when you press a button"
        ],
        "answer": "Animating the transition between two screens"
    },
    {
        "text": "Which Flutter widget would we use to display cards for every element of a collection?",
        "options": [
            "Scaffold",
            "ListView",
            "AppBar",
            "RecyclerView"
        ],
        "answer": "ListView"
    },
    {
        "text": "Which widget can be used to provide event listeners such as onTap to widgets that don't have that functionality like Cards?",
        "options": [
            "ElevatedButton",
            "onClickListener",
            "GestureDetector",
            "Hero"
        ],
        "answer": "GestureDetector"
    },
    {
        "text": "A widget like a shopping cart icon with a counter that increases each time the user adds a new item should be stateless.",
        "options": [
            "True",
            "False"
        ],
        "answer": "False"
    },
    {
        "text": "Flutter can be used to build both Android and iOS applications.",
        "options": [
            "True",
            "False"
        ],
        "answer": "True"
    },
    {
        "text": "When the properties of an AnimatedContainer change (for example, the height), they will be animated automatically.",
        "options": [
            "True",
            "False"
        ],
        "answer": "True"
    },
    {
        "text": "When the state of a Stateful Widget changes, the UI will be rebuilt.",
        "options": [
            "True",
            "False"
        ],
        "answer": "True"
    },
    {
        "text": "The data in Firebase Realtime Database is structured as JSON.",
        "options": [
            "True",
            "False"
        ],
        "answer": "True"
    },
    {
        "text": "What would the value of myString be after the following code runs:\nval myInt = 4;\nval myString = if (myInt > 4) \"Hello\" else \"Goodbye\"",
        "options": [
            "This code is incorrect and will not work",
            "Hello",
            "Goodbye",
            "4"
        ],
        "answer": "Goodbye"
    },
    {
        "text": "What code would we generally put inside onBindViewHolder for a FirebaseRecyclerView?",
        "options": [
            "Setting whether the RecyclerView should be linear or with a grid",
            "Taking data from the model and setting the widgets' properties with it",
            "Getting a reference to the RecyclerView widget",
            "Constructors for ViewHolder objects with inflaters"
        ],
        "answer": "Taking data from the model and setting the widgets' properties with it"
    },
    {
        "text": "Which file would we add our dependencies to?",
        "options": [
            "build.gradle",
            "dependencies.json",
            "AndroidManifest.xml",
            "R.java"
        ],
        "answer": "build.gradle"
    },
    {
        "text": "What is one of the purposes of the FirebaseRecyclerAdapter class?",
        "options": [
            "Running a query from a Firebase Database",
            "Providing a simple library for authentication with Firebase",
            "Determining whether a RecyclerView will be a grid or a column",
            "Showing the data from Firebase to the user"
        ],
        "answer": "Showing the data from Firebase to the user"
    },
    {
        "text": "Which part of the MEAN stack creates the server?",
        "options": [
            "Node.js",
            "Angular",
            "MongoDB",
            "Express"
        ],
        "answer": "Node.js"
    }
]